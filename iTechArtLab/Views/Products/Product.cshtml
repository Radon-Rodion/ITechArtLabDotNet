@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using DataAccessLayer.Models
@model ProductViewModel

<h1>Product info</h1>

<h4>Product</h4>
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-controller="Products" asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" disabled id="id" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" id="productName" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PlatformId" class="control-label"></label>
                <input asp-for="PlatformId" class="form-control" type="number" id="platformId" />
            </div>
            <div class="form-group">
                <label asp-for="TotalRating" class="control-label"></label>
                <input asp-for="TotalRating" class="form-control" disabled id="totalRating" />
                <span asp-validation-for="TotalRating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GenreId" class="control-label"></label>
                <input asp-for="GenreId" class="form-control" type="number" id="genreId" />
            </div>
            <div class="form-group">
                <label asp-for="AgeRating" class="control-label"></label>
                <input asp-for="AgeRating" class="form-control" id="ageRating" />
                <span asp-validation-for="AgeRating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LogoLink" class="control-label"></label>
                <input asp-for="LogoLink" class="form-control" id="logoLink" />
                <span asp-validation-for="LogoLink" class="text-danger"></span>
                <img src="@Model.LogoLink" alt="No Image" id="logoImg" />
            </div>
            <div class="form-group">
                <label asp-for="BackgroundLink" class="control-label"></label>
                <input asp-for="BackgroundLink" class="form-control" id="backgroundLink" />
                <span asp-validation-for="BackgroundLink" class="text-danger"></span>
                <img src="@Model.BackgroundLink" alt="No Image" id="backImg" />
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" id="price" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Count" class="control-label"></label>
                <input asp-for="Count" class="form-control" id="count" />
                <span asp-validation-for="Count" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" id="submitBtn" />
            </div>
        </form>
    </div>
</div>

<div>
    <a href="/api/games/search">Back to Search</a>
</div>
<div>
    <a href="/api/games/list?nameFilter= &genreFilter=0&ageFilter=0&sortField=Rating&ascSorting=on&elementsOnPage=5">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    async function sendDataAsync() {
        const formData = new FormData();
        formData.append('id', document.getElementById("id").value);
        formData.append('productName', document.getElementById("productName").value);
        formData.append('platformId', document.getElementById("platformId").value);
        formData.append('totalRating', document.getElementById("totalRating").value);
        formData.append('genreId', document.getElementById("genreId").value);
        formData.append('ageRating', document.getElementById("ageRating").value);
        formData.append('logoLink', document.getElementById("logoLink").value);
        formData.append('backgroundLink', document.getElementById("backgroundLink").value);
        formData.append('price', document.getElementById("price").value);
        formData.append('count', document.getElementById("count").value);

        const response = await fetch("/api/games", {
            method: 'put',
            headers: { "Accept": "application/json" },
            body: formData
        });
        const data = await response.json();

        if (response.ok === true) {
            document.getElementById("id").value = data.id;
            document.getElementById("productName").value = data.name;
            document.getElementById("platformId").value = data.platformId;
            document.getElementById("totalRating").value = data.totalRating;
            document.getElementById("genreId").value = data.genreId;
            document.getElementById("ageRating").value = data.ageRating;
            document.getElementById("logoLink").value = data.logoLink;
            document.getElementById("backgroundLink").value = data.backgroundLink;
            document.getElementById("price").value = data.price;
            document.getElementById("count").value = data.count;
        }
    }
    document.getElementById("submitBtn").addEventListener("click", e => {
        e.preventDefault();
        sendDataAsync();
    });
</script>
